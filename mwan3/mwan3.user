#!/bin/sh
#
# This file is interpreted as shell script.
# Put your custom mwan3 action here, they will
# be executed with each netifd hotplug interface event
# on interfaces for which mwan3 is enabled.
#
# There are three main environment variables that are passed to this script.
#
# $ACTION
#      <ifup>         Is called by netifd and mwan3track.
#      <ifdown>       Is called by netifd and mwan3track.
#      <connected>    Is only called by mwan3track if tracking was successful.
#      <disconnected> Is only called by mwan3track if tracking has failed.
# $INTERFACE	Name of the interface an action relates to {e.g. "wan" or "wwan".
# $DEVICE	Physical device name of the interface the action relates to {e.g. "eth0" or "wwan0".
#               Note: On an ifdown event, $DEVICE is not available, use $INTERFACE instead.
#
# Further documentation can be found here:
# https://openwrt.org/docs/guide-user/network/wan/multiwan/mwan3#alertsnotifications

DATE() {
  echo `/root/date-utc-nlf.sh`
}

DBG() {
  echo "$(DATE)-$1" >> /root/mwan3.user.messages
}

#DBG "1 STARTING without nohup: $0"

# Using `nohup` was ment to allow for long sleeps, 30secs to 2min, when
# trying to send messages. I.e. if the diconntion was short enough we
# it might connect duing the sleeps and the message would get out. Alas,
# using `nohup` doesn't allow mwan3 to actually contine as mwan3.user is
# never called until the sleeps complete. So the line below isn't useful:
#(nohup /root/mwan3.process.sh $ACTION $INTERFACE $DEVICE &) > /dev/null 2>&1 &

# Instead just do the work directly:
/root/mwan3.process.sh $ACTION $INTERFACE $DEVICE &

#DBG "3 EXITING: $0"
