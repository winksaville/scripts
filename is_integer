#!/bin/bash
# Written by Wink Saville and ChatGPT4

VERSION="1.0.1"

# Function to check if a value is a valid integer
is_integer() {
    [[ "$1" =~ ^[-+]?([1-9][0-9]*|0[xX][0-9a-fA-F]+|0[0-7]*)$ ]]
    return $?
}

# Function to run tests
run_tests() {
    echo "Running tests..."

    # Test cases for is_integer function
    # Format: ("value" "expected_result")
    test_cases=(
        "123 true"          # valid integer
        "-123 true"         # valid negative integer
        "+123 true"         # valid positive integer
        "0 true"            # valid zero
        "0x1f true"         # valid hexadecimal
        "0X1F true"         # valid hexadecimal
        "0755 true"         # valid octal
        "abc false"         # invalid integer
        "12abc34 false"     # invalid integer
        "\"\" false"        # invalid integer (empty string)
        "@#$%! false"       # invalid special characters
        "123 456 false"     # invalid (multiple words and numbers)
        "0xGHI false"       # invalid hexadecimal
        "00789 false"       # invalid octal (invalid digit)
        "1- false"          # invalid integer
        "2+ false"          # invalid integer
        "1+2 false"         # invalid integer
        "1-2 false"         # invalid integer
        "a 1 false"         # invalid integer
        "2 b false"         # invalid integer
    )

    for test_case in "${test_cases[@]}"; do
        value="${test_case% *}"
        expected_result="${test_case##* }"

        is_integer "$value"
        actual_result=$?
        expected_result_bool=$([[ "$expected_result" == "true" ]] && echo 0 || echo 1)

        if [[ "$actual_result" == "$expected_result_bool" ]]; then
            echo "Test case '$value' PASSED."
        else
            echo "Test case '$value' FAILED. Expected $expected_result but got $([[ "$actual_result" == 0 ]] && echo true || echo false)."
        fi
    done

    echo "Tests completed."
}

# Function to print usage information
print_usage() {
    echo "Usage: $0 [-v|--verbose] [-q|--quiet] <value>|test"
    echo "Version: $VERSION"
}

# Check for correct usage
if (( $# < 1 || $# > 2 )); then
    print_usage
    exit 1
fi

# Default verbose flag to false
VERBOSE=false

# Parse optional parameters
while (( $# > 1 )); do
    case $1 in
        -v|--verbose)
            VERBOSE=true
            shift
            ;;
        -q|--quiet)
            VERBOSE=false
            shift
            ;;
        *)
            print_usage
            exit 1
            ;;
    esac
done

# Run tests if the first argument is "test"
if [[ "$1" == "test" ]]; then
    run_tests
    exit 0
fi

# Check if the single parameter is a valid integer
is_integer "$1"
result=$?
if [[ $VERBOSE == true ]]; then
    if (( result == 0 )); then
        echo "$1 is a valid integer."
    else
        echo "$1 is not a valid integer."
    fi
fi
exit $result
